<UserControl x:Class="C_TestForge.UI.Views.TestCaseManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:local="clr-namespace:C_TestForge.UI.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <ToolBar Grid.Row="0">
            <Button Command="{Binding AddTestCaseCommand}"
                    ToolTip="Add New Test Case">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Add" />
                    <TextBlock Text="Add" Margin="4,0,0,0" />
                </StackPanel>
            </Button>

            <Separator />

            <Button Command="{Binding ImportTestCasesCommand}"
                    ToolTip="Import Test Cases">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Import" />
                    <TextBlock Text="Import" Margin="4,0,0,0" />
                </StackPanel>
            </Button>

            <Button Command="{Binding ExportTestCasesCommand}"
                    ToolTip="Export Test Cases">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Export" />
                    <TextBlock Text="Export" Margin="4,0,0,0" />
                </StackPanel>
            </Button>

            <Separator />

            <Button Command="{Binding CompareTestCasesCommand}"
                    ToolTip="Compare Test Cases">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Compare" />
                    <TextBlock Text="Compare" Margin="4,0,0,0" />
                </StackPanel>
            </Button>

            <Separator />

            <Button Command="{Binding GenerateUnitTestCommand}"
                    ToolTip="Generate Test Case">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="AutoFix" />
                    <TextBlock Text="Generate" Margin="4,0,0,0" />
                </StackPanel>
            </Button>

            <Separator />

            <Button Command="{Binding RefreshCommand}"
                    ToolTip="Refresh">
                <materialDesign:PackIcon Kind="Refresh" />
            </Button>
        </ToolBar>

        <!-- Test Cases Table -->
        <DataGrid Grid.Row="1"
                  ItemsSource="{Binding TestCases}"
                  SelectedItem="{Binding SelectedTestCase}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  materialDesign:DataGridAssist.CellPadding="8">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                <DataGridTextColumn Header="Function" Binding="{Binding FunctionName}" Width="*"/>
                <DataGridTemplateColumn Header="Type" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Run Text="{Binding Type}" />
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Status" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border CornerRadius="4" Padding="4,2" Margin="2">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Status}" Value="NotExecuted">
                                                <Setter Property="Background" Value="#FFE0E0E0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="Passed">
                                                <Setter Property="Background" Value="#FFD0F0C0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="Failed">
                                                <Setter Property="Background" Value="#FFF0C0C0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="Error">
                                                <Setter Property="Background" Value="#FFF0D0A0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <TextBlock Text="{Binding Status}" />
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Created" Binding="{Binding CreatedDate, StringFormat=\{0:yyyy-MM-dd\}}" Width="Auto"/>
                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Command="{Binding DataContext.EditTestCaseCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource MaterialDesignIconButton}"
                                        ToolTip="Edit">
                                    <materialDesign:PackIcon Kind="Edit" />
                                </Button>
                                <Button Command="{Binding DataContext.DuplicateTestCaseCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource MaterialDesignIconButton}"
                                        ToolTip="Duplicate">
                                    <materialDesign:PackIcon Kind="ContentDuplicate" />
                                </Button>
                                <Button Command="{Binding DataContext.DeleteTestCaseCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource MaterialDesignIconButton}"
                                        ToolTip="Delete">
                                    <materialDesign:PackIcon Kind="Delete" />
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Expander Header="Details" Margin="10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Description -->
                            <TextBlock Grid.Row="0" 
                                       Text="{Binding Description}" 
                                       Margin="0,0,0,10"
                                       TextWrapping="Wrap"/>

                            <!-- Inputs -->
                            <GroupBox Grid.Row="1" Header="Inputs" Margin="0,0,0,10">
                                <DataGrid ItemsSource="{Binding Inputs}"
                                          AutoGenerateColumns="False"
                                          IsReadOnly="True"
                                          HeadersVisibility="Column">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Variable" Binding="{Binding VariableName}" Width="*"/>
                                        <DataGridTextColumn Header="Type" Binding="{Binding VariableType}" Width="*"/>
                                        <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="*"/>
                                        <DataGridCheckBoxColumn Header="Is Stub" Binding="{Binding IsStub}" Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </GroupBox>

                            <!-- Expected Outputs -->
                            <GroupBox Grid.Row="2" Header="Expected Outputs">
                                <DataGrid ItemsSource="{Binding ExpectedOutputs}"
                                          AutoGenerateColumns="False"
                                          IsReadOnly="True"
                                          HeadersVisibility="Column">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Variable" Binding="{Binding VariableName}" Width="*"/>
                                        <DataGridTextColumn Header="Type" Binding="{Binding VariableType}" Width="*"/>
                                        <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="*"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </GroupBox>
                        </Grid>
                    </Expander>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>

        <!-- Status Bar -->
        <Grid Grid.Row="2" Background="{DynamicResource MaterialDesignToolBarBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" 
                       Text="{Binding StatusMessage}" 
                       Margin="10,5" 
                       VerticalAlignment="Center"/>

            <ProgressBar Grid.Column="1" 
                         IsIndeterminate="True" 
                         Width="100" 
                         Margin="5"
                         Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>

        <!-- Loading Overlay -->
        <Grid Grid.Row="0" Grid.RowSpan="3" 
              Background="#80000000"
              Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel HorizontalAlignment="Center" 
                        VerticalAlignment="Center">
                <ProgressBar IsIndeterminate="True" 
                             Width="200" 
                             Height="20" 
                             Margin="0,0,0,10"/>
                <TextBlock Text="{Binding StatusMessage}" 
                           Foreground="White"
                           HorizontalAlignment="Center"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
