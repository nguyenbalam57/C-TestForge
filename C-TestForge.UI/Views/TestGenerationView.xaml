<UserControl x:Class="C_TestForge.UI.Views.TestGenerationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:C_TestForge.UI.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:C_TestForge.UI.Converters"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--<converters:EnumToStringConverter x:Key="EnumToStringConverter" />-->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <!--<ObjectDataProvider x:Key="TestCaseTypeValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    -->
            <!--<x:Type TypeName="models:TestCaseType" />-->
            <!--
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>-->
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Header with TestCase Type selection -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="Test Generation" Style="{StaticResource MaterialDesignHeadline5TextBlock}" VerticalAlignment="Center" />

            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <TextBlock Text="Test Type:" VerticalAlignment="Center" Margin="0,0,10,0" />
                <!--<ComboBox Width="150" ItemsSource="{Binding Source={StaticResource TestCaseTypeValues}}"
                          SelectedItem="{Binding SelectedTestType}"
                          materialDesign:HintAssist.Hint="Select Test Type">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumToStringConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>-->
            </StackPanel>
        </Grid>

        <!-- Main Content -->
        <Grid Grid.Row="1" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.35*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="0.65*" />
            </Grid.ColumnDefinitions>

            <!-- Left Panel - Function Selection -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Available Functions" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" VerticalAlignment="Center" />
                    <Button Command="{Binding SelectAllFunctionsCommand}" Style="{StaticResource MaterialDesignFlatButton}" Margin="10,0,0,0">
                        <TextBlock Text="Select All" />
                    </Button>
                    <Button Command="{Binding UnselectAllFunctionsCommand}" Style="{StaticResource MaterialDesignFlatButton}">
                        <TextBlock Text="Clear" />
                    </Button>
                </StackPanel>

                <ListView Grid.Row="1" ItemsSource="{Binding AvailableFunctions}" SelectionMode="Multiple">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Signature}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" />

            <!-- Right Panel - Test Cases & Code -->
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Test Generation Options -->
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10,0,0,10">
                    <Button Command="{Binding GenerateTestsCommand}" IsEnabled="{Binding CanGenerate}" 
                            Style="{StaticResource MaterialDesignRaisedButton}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Play" VerticalAlignment="Center" />
                            <TextBlock Text="Generate Tests" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button>
                    <Button Command="{Binding SaveTestCasesCommand}" Style="{StaticResource MaterialDesignRaisedButton}" 
                            Margin="10,0,0,0">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ContentSave" VerticalAlignment="Center" />
                            <TextBlock Text="Save Test Cases" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!-- Generated Test Cases DataGrid -->
                <DataGrid Grid.Row="1" ItemsSource="{Binding GeneratedTestCases}" 
                          SelectedItem="{Binding SelectedTestCase}" AutoGenerateColumns="False"
                          Style="{StaticResource MaterialDesignDataGrid}" Margin="10,0,0,10">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" />
                        <DataGridTextColumn Header="Function" Binding="{Binding FunctionUnderTest}" Width="*" />
                        <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="100" />
                        <DataGridTextColumn Header="Stubs" Binding="{Binding RequiredStubs.Count}" Width="60" />
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Code Header -->
                <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="10,0,0,10">
                    <TextBlock Text="Generated Code" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" VerticalAlignment="Center" />
                    <Button Command="{Binding CopyCodeCommand}" Style="{StaticResource MaterialDesignFlatButton}" Margin="10,0,0,0">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ContentCopy" VerticalAlignment="Center" />
                            <TextBlock Text="Copy Code" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!-- Generated Code Editor -->
                <Border Grid.Row="3" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="1" Margin="10,0,0,0">
                    <avalonEdit:TextEditor x:Name="CodeEditor" SyntaxHighlighting="C" 
                                           FontFamily="Consolas" FontSize="12" 
                                           Document="{Binding GeneratedCode, Mode=TwoWay}" 
                                           ShowLineNumbers="True" />
                </Border>
            </Grid>
        </Grid>

        <!-- Status Bar -->
        <StatusBar Grid.Row="2" VerticalAlignment="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <ProgressBar IsIndeterminate="True" Width="100" Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
